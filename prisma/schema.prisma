generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Causa {
  id                        Int               @id @default(autoincrement())
  denominacionCausa         String
  ruc                       String?
  fechaDelHecho             DateTime?
  rit                       String?
  fechaIta                  DateTime?
  numeroIta                 String?
  fechaPpp                  DateTime?
  numeroPpp                 String?
  observacion               String?
  foliobw                   String?
  causaEcoh                 Boolean
  causaLegada               Boolean?
  coordenadasSs             String?
  homicidioConsumado        Boolean?
  constituyeSs              Boolean?
  sinLlamadoEcoh            Boolean?
  fechaHoraTomaConocimiento DateTime?
  comunaId                  Int?
  analistaId                Int?
  fiscalId                  Int?
  focoId                    Int?
  delitoId                  Int?
  abogadoId                 Int?
  tribunalId                Int?
  nacionalidadVictimaId     Int?
  abogado                   Abogado?          @relation(fields: [abogadoId], references: [id])
  analista                  Analista?         @relation(fields: [analistaId], references: [id])
  comuna                    Comuna?           @relation(fields: [comunaId], references: [id])
  delito                    Delito?           @relation(fields: [delitoId], references: [id])
  fiscal                    Fiscal?           @relation(fields: [fiscalId], references: [id])
  foco                      Foco?             @relation(fields: [focoId], references: [id])
  nacionalidadVictima       Nacionalidad?     @relation(fields: [nacionalidadVictimaId], references: [id])
  tribunal                  Tribunal?         @relation(fields: [tribunalId], references: [id])
  imputados                 CausasImputados[]
  victimas                  CausasVictimas[]
}

model Victima {
  id             Int              @id @default(autoincrement())
  nombreVictima  String
  docId          String
  nacionalidadId Int?
  causas         CausasVictimas[]
  nacionalidad   Nacionalidad?    @relation(fields: [nacionalidadId], references: [id])
}

model Imputado {
  id             Int                    @id @default(autoincrement())
  nombreSujeto   String
  docId          String
  nacionalidadId Int?
  createdAt      DateTime?              @default(now())
  updatedAt      DateTime?              @updatedAt
  causas         CausasImputados[]
  nacionalidad   Nacionalidad?          @relation(fields: [nacionalidadId], references: [id])
  organizaciones MiembrosOrganizacion[]
}

model Nacionalidad {
  id        Int        @id @default(autoincrement())
  nombre    String
  causas    Causa[]
  imputados Imputado[]
  victimas  Victima[]
}

model Analista {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Fiscal {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Foco {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Delito {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Abogado {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Tribunal {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model CausasImputados {
  causaId            Int
  imputadoId         Int
  cautelarId         Int?
  fechaFormalizacion DateTime?
  formalizado        Boolean   @default(false)
  esimputado         Boolean   @default(false)
  essujetoInteres    Boolean   @default(false)
  plazo              Int?
  causa              Causa     @relation(fields: [causaId], references: [id])
  cautelar           Cautelar? @relation(fields: [cautelarId], references: [id])
  imputado           Imputado  @relation(fields: [imputadoId], references: [id])

  @@id([causaId, imputadoId])
}

model CausasVictimas {
  causaId   Int
  victimaId Int
  causa     Causa   @relation(fields: [causaId], references: [id])
  victima   Victima @relation(fields: [victimaId], references: [id])

  @@id([causaId, victimaId])
}

model Comuna {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Cautelar {
  id              Int               @id @default(autoincrement())
  nombre          String
  causasImputados CausasImputados[]
}

model TipoOrganizacion {
  id             Int                     @id @default(autoincrement())
  nombre         String
  descripcion    String?
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
  organizaciones OrganizacionDelictual[]
}

model OrganizacionDelictual {
  id                  Int                    @id @default(autoincrement())
  nombre              String
  descripcion         String?
  fechaIdentificacion DateTime
  activa              Boolean                @default(true)
  tipoOrganizacionId  Int
  createdAt           DateTime               @default(now())
  updatedAt           DateTime               @updatedAt
  miembros            MiembrosOrganizacion[]
  tipoOrganizacion    TipoOrganizacion       @relation(fields: [tipoOrganizacionId], references: [id])
}

model MiembrosOrganizacion {
  id             Int                   @id @default(autoincrement())
  organizacionId Int
  imputadoId     Int
  rol            String?
  fechaIngreso   DateTime
  fechaSalida    DateTime?
  activo         Boolean               @default(true)
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  imputado       Imputado              @relation(fields: [imputadoId], references: [id])
  organizacion   OrganizacionDelictual @relation(fields: [organizacionId], references: [id])

  @@unique([organizacionId, imputadoId])
}
